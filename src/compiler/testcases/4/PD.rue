// Details here: http://en.wikipedia.org/wiki/Prisoner's_dilemma
environment name "The Prisoner's Dilemma";

global {
       // 0 = neither cooperated,  1 = one cooperated, 2 = both cooperated
       // -1 = no prev action
       int last_outcome {(last_outcome >=-1) && (last_outcome <= 2)};             
}

attributes {
	int points {points >= 0};
	
	// can be -1 (no prev action), 0 (defected), or 1 (cooperated)
	int last_action {(last_action >= -1) && (last_action <= 1)};
}

def required step() {
	// let the prisoners choose what to do...
	$part[0].step();
	$part[1].step();
	
	// award the points for this round...
	if ($part[0].last_action == 0) { // player 0 defected
		if ($part[1].last_action == 0) { // player 1 defected
			set($part[0].points, $part[0].points+1);
			set($part[1].points, $part[1].points+1);
			last_outcome = 0;
		} else { // player 1 cooperated
			set($part[0].points, $part[0].points+5);
			last_outcome = 1;
		}		
	} else { // player 0 cooperated
		if ($part[1].last_action == 0) { // player 1 defected
			set($part[0].points, $part[0].points+5);
			last_outcome = 1;
		} else { // player 1 cooperated
			set($part[0].points, $part[0].points+3);
			set($part[1].points, $part[1].points+3);
			last_outcome = 2;
		}
	}	
}

// actions the prisoners can take
def action defect() {
	set($me.last_action,0);
}

def action cooperate() {
	set($me.last_action,1);
}